// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ValorantDatabase;

namespace ValorantDatabase.Migrations
{
    [DbContext(typeof(ValorantContext))]
    [Migration("20200619135358_AddedAgentImagePath")]
    partial class AddedAgentImagePath
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ValorantDatabase.AgentType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TypeID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("TypeId")
                        .HasName("PK_TypeID");

                    b.ToTable("AgentType");
                });

            modelBuilder.Entity("ValorantDatabase.Agents", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AgentID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AbilityOneDiscription")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("AbilityOneName")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("AbilityTwoDiscription")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("AbilityTwoName")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("AgentName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("AgentTypeId")
                        .HasColumnName("AgentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .HasColumnType("varchar(700)")
                        .HasMaxLength(700)
                        .IsUnicode(false);

                    b.Property<string>("ImagePath")
                        .HasColumnType("varchar(35)")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("SignatureAbilityDiscription")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("SignatureAbilityName")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.Property<string>("UltamateAbilityDiscription")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("UltamateAbilityName")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30)
                        .IsUnicode(false);

                    b.HasKey("AgentId")
                        .HasName("PK_AgentID");

                    b.HasIndex("AgentTypeId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("ValorantDatabase.GameLogs", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GameID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float?>("Adr")
                        .HasColumnName("ADR")
                        .HasColumnType("real");

                    b.Property<int>("AgentId")
                        .HasColumnName("AgentID")
                        .HasColumnType("int");

                    b.Property<int?>("Assits")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateLogged")
                        .HasColumnType("datetime");

                    b.Property<int?>("Deaths")
                        .HasColumnType("int");

                    b.Property<int?>("Kills")
                        .HasColumnType("int");

                    b.Property<int>("MapId")
                        .HasColumnName("MapID")
                        .HasColumnType("int");

                    b.Property<int>("OpponentScore")
                        .HasColumnType("int");

                    b.Property<int>("TeamScore")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.HasIndex("AgentId");

                    b.HasIndex("MapId");

                    b.ToTable("GameLogs");
                });

            modelBuilder.Entity("ValorantDatabase.Maps", b =>
                {
                    b.Property<int>("MapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MapID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MapName")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("MapId")
                        .HasName("PK_MapID");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("ValorantDatabase.Agents", b =>
                {
                    b.HasOne("ValorantDatabase.AgentType", "AgentType")
                        .WithMany("Agents")
                        .HasForeignKey("AgentTypeId")
                        .HasConstraintName("FK_AgentType")
                        .IsRequired();
                });

            modelBuilder.Entity("ValorantDatabase.GameLogs", b =>
                {
                    b.HasOne("ValorantDatabase.Agents", "Agent")
                        .WithMany("GameLogs")
                        .HasForeignKey("AgentId")
                        .HasConstraintName("FK_Agent")
                        .IsRequired();

                    b.HasOne("ValorantDatabase.Maps", "Map")
                        .WithMany("GameLogs")
                        .HasForeignKey("MapId")
                        .HasConstraintName("FK_Map")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
